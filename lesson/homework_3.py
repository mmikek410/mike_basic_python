#1. Простая работа с print()
print("Привет мир!")
print(5," ",10," ",15)
print(10+15)

#2. Использование параметров sep и end в print()
sep="&"
print(1,sep,2,sep,3)
print("Python", end=" ")
print("лучший язык")

#3. Форматированный вывод с F-строками
x = 3.14
y = -8
print(f"Координаты точки: x = {x}; y = {y}")

#name = input("Введите ваше имя: ")
#age = input("Введите ваш возраст: ")
#print(f"Имя: {name},Возраст: {age}")

#4. Работа с input()
#name = input("Введите ваше имя")
#print(f"Привет, {name}!")

#5 Преобразование типов

#a = float(input("Введите первое число: "))
#b = float(input("Введите второе число: "))
#print(f"Сумма: {a + b}")

# Квадрат целого числа
#n = int(input("Введите целое число: "))
#print(f"Квадрат числа: {n ** 2}")

#++++++++++++++++++++++++++++++++++++++++++++++++
#Булевые значения
#++++++++++++++++++++++++++++++++++++++++++++++++

#1. Основы булевой логики
print(f"{5 > 3}")
print(f"{10 < 2}")
print(f"{7 == 7}")
print(f"{6 != 8}")
print(f"{4 >= 4}")
print(f"{9 <= 3}")
res = 8 > 12
print(type(res))

#2. Проверка четности и кратности числа
x = 15
print(x % 2 == 0)
print(x % 5 == 0)
print(x % 5 == 0 & x % 3 ==0)

#3. Работа с логическими операторами (and, or, not)
y = 4.5
print(1 <= y and y <= 10)
print(0 <= y <= 10 or 10 <= y <= 15)
print(not(y < 5))

#4. Приоритет логических операций
print(True or False and False)
print(not False and True)
print(False or not True and True)
print(not (10 > 5 or 3 < 1))

# 5. Приведение типов к bool
print(bool(0))
print(bool(-5))
print(bool(3.14))
print(bool(""))
print(bool("Python"))
print(bool(" "))

#6. Дополнительное задание

y = 12
print(bool(y > 0 and y % 2 == 0 and y % 3 == 0))

#++++++++++++++++++++++++++++++++++++++++++++++++
#Срезы строк
#++++++++++++++++++++++++++++++++++++++++++++++++

#1. Доступ к символам по индексу.
s = "Программирование"
print(s[0])
print(s[-1])
print(s[2],s[-2])

#2. Обращение к символам с проверкой границ

#print(s[100]) IndexError: string index out of range

print(len(s))
print(s[15])

#3. Создание срезов

print(s[:6])

print(s[-5:])
print(s[2:7])
print(s[::2])
print(s[::-1])

#4. Работа с шагом в срезах
print(s[::3])
print(s[::-2])

#5. Проверка неизменяемости строк

# Попытка изменить первый символ
# s[0] = "П"  # ❌ Ошибка! TypeError: 'str' object does not support item assignment

# Почему ошибка:
# Строки в Python — **неизменяемые** (immutable). Нельзя менять отдельные символы.
# Нужно создать новую строку.

# Создание новой строки с заменой первого символа
s2 = "П" + s[1:]
print(s2)  # 'Программирование'